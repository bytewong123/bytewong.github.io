<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>栈 on wangzijie&#39;s site</title>
    <link>https://bytewong123.github.io/tags/%E6%A0%88/</link>
    <description>Recent content in 栈 on wangzijie&#39;s site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 14 Nov 2021 10:53:59 +0800</lastBuildDate><atom:link href="https://bytewong123.github.io/tags/%E6%A0%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>leetcode20 有效的括号</title>
      <link>https://bytewong123.github.io/posts/leetcode_20/</link>
      <pubDate>Sun, 14 Nov 2021 10:53:59 +0800</pubDate>
      
      <guid>https://bytewong123.github.io/posts/leetcode_20/</guid>
      <description>链接 https://leetcode-cn.com/problems/valid-parentheses/
题目 给定一个只包括 &#39;(&#39;，&#39;)&#39;，&#39;{&#39;，&#39;}&#39;，&#39;[&#39;，&#39;]&#39; 的字符串 s ，判断字符串是否有效。 有效字符串需满足： 左括号必须用相同类型的右括号闭合。 左括号必须以正确的顺序闭合。 示例 1： 输入：s = &amp;quot;()&amp;quot; 输出：true 示例 2： 输入：s = &amp;quot;()[]{}&amp;quot; 输出：true 示例 3： 输入：s = &amp;quot;(]&amp;quot; 输出：false 示例 4： 输入：s = &amp;quot;([)]&amp;quot; 输出：false 示例 5： 输入：s = &amp;quot;{[]}&amp;quot; 输出：true 思路  栈的常规思路，若新括号匹配到栈顶的括号，则栈顶括号弹出，新括号丢弃；未匹配到则新括号入栈  func isValid(s string) bool { stack := make([]byte, 0, len(s)) for i := 0; i &amp;lt; len(s); i++ { if len(stack) == 0 { stack = append(stack, s[i]) continue } if (s[i] == &amp;#39;)&amp;#39; &amp;amp;&amp;amp; stack[len(stack) - 1] == &amp;#39;(&amp;#39;) || (s[i] == &amp;#39;]&amp;#39; &amp;amp;&amp;amp; stack[len(stack) - 1] == &amp;#39;[&amp;#39;) || (s[i] == &amp;#39;}&amp;#39; &amp;amp;&amp;amp; stack[len(stack) - 1] == &amp;#39;{&amp;#39;) { stack = stack[:len(stack) - 1] } else { stack = append(stack, s[i]) } } return len(stack) == 0 } </description>
    </item>
    
  </channel>
</rss>
